{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAMC,EAAQC,OAAON,SAASC,cAAc,uBAAuBM,OAC7DC,EAAOF,OAAON,SAASC,cAAc,sBAAsBM,OAC3DE,EAASH,OAAON,SAASC,cAAc,wBAAwBM,OAE5DG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAIhCpB,EAHiBoB,EACIL,GAASK,EAAI,GAAKF,GAGpCG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(document.querySelector('input[name=\"delay\"]').value);\n  const step = Number(document.querySelector('input[name=\"step\"]').value);\n  const amount = Number(document.querySelector('input[name=\"amount\"]').value);\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const promiseDelay = delay + (i - 1) * step;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0cb11272.js.map"}